// <auto-generated />
using E_Ticketing.DataLayer.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Ticketing.DataLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220701090818_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("E_Ticketing.CoreLayer.Entity.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Vehicle_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Vehicle_Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Vehicle_Number")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("vehicle_number");

                    b.Property<string>("Vehicle_Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("Vehicle_CategoryId");

                    b.ToTable("vehicle", (string)null);
                });

            modelBuilder.Entity("E_Ticketing.CoreLayer.Entity.VehicleCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Category_Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("vehicle_category", (string)null);
                });

            modelBuilder.Entity("E_Ticketing.CoreLayer.Entity.Vehicle", b =>
                {
                    b.HasOne("E_Ticketing.CoreLayer.Entity.VehicleCategory", "Vehicle_Category")
                        .WithMany("Vehicles")
                        .HasForeignKey("Vehicle_CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle_Category");
                });

            modelBuilder.Entity("E_Ticketing.CoreLayer.Entity.VehicleCategory", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
